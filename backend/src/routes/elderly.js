// routes/users.js
const express = require('express');
const router = express.Router();
const { requireAuth } = require('../middleware/auth');
const HelpRequest = require('../services/helpRequest');
const multer = require('multer');
const path = require('path');
const fs = require('fs');
const ElderlyController = require('../controllers/elderlyController');

// For file upload when creating help request
// Create uploads folder if it doesn't exist
const uploadPath = path.join(__dirname, "../services/uploads");
if (!fs.existsSync(uploadPath)) {
  fs.mkdirSync(uploadPath, { recursive: true });
}

var storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, uploadPath)
    },
    filename: function (req, file, cb) {
        cb(null, Date.now() + path.extname(file.originalname)) //Appending extension
    }
})

const upload = multer({ storage: storage });



router.get('/profile', requireAuth, ElderlyController.getProfile);
router.put('/profile', requireAuth, ElderlyController.updateProfile);

router.get('/getCompletedHelpRequestswithVolunteer/:userID', async (req, res) => {

    try {
        var userID = req.params.userID;
        
        const result = await HelpRequest.getCompletedHelpRequestswithVolunteer(userID);

        console.log(result);


        res.status(200).json(result);
    } catch (error) {
        console.log(error);

        console.error('Error creating help request:', error);
        res.status(500).json({ error: 'Internal server error' });
    }


});



// POST /api/elderly/requestHelp - Create new help request
router.post('/requestHelp', upload.single('image'),/*  requireAuth, */ async (req, res) => {

    try {
        var userID = req.body.userID;
        var longitude = req.body.longitude;
        var latitude = req.body.latitude;
        var address = req.body.location;
        var description = req.body.description;
        var urgency = req.body.urgency;
        if (req.file) {
            var uploadedFilename = req.file.filename; // Get the filename generated by diskStorage
        } else {
            var uploadedFilename = null;
        }


        // TODO: convert location to longitude and latitude



        const result = await HelpRequest.createRequest(userID, longitude, latitude, address, description, urgency,uploadedFilename);

        console.log(result);

        // TODO: Alert neaby volunteers


        res.status(200).send("success");

    } catch (error) {
        console.log(error);

        console.error('Error creating help request:', error);
        res.status(500).json({ error: 'Internal server error' });

    }

});

// Route history endpoints
router.post('/route-history', requireAuth, async (req, res) => {
    try {
        const { from, to, mode, duration, accessibility, completedAt, steps, isRecommended } = req.body;
        const userId = req.user.id;

        // Save route history to database
        const routeHistory = {
            userId,
            from,
            to,
            mode,
            duration,
            accessibility,
            completedAt: new Date(completedAt),
            steps,
            isRecommended
        };

        // Here you would typically save to your database
        // For now, we'll just return success
        console.log('Route history saved:', routeHistory);
        
        res.status(200).json({ 
            message: 'Route history saved successfully',
            routeHistory 
        });

    } catch (error) {
        console.error('Error saving route history:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

router.get('/route-history', requireAuth, async (req, res) => {
    try {
        const userId = req.user.id;
        const limit = parseInt(req.query.limit) || 10;

        // Here you would typically fetch from your database
        // For now, we'll return mock data
        const mockHistory = [
            {
                id: 1,
                from: "Marina Bay Sands",
                to: "Changi Airport",
                mode: "MRT + Bus",
                duration: "45 mins",
                accessibility: "Wheelchair accessible",
                completedAt: new Date().toISOString(),
                steps: 8,
                isRecommended: true
            },
            {
                id: 2,
                from: "Orchard Road",
                to: "Sentosa Island",
                mode: "Bus + Walk",
                duration: "30 mins",
                accessibility: "Elderly friendly",
                completedAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago
                steps: 5,
                isRecommended: false
            }
        ];

        res.status(200).json({ 
            message: 'Route history retrieved successfully',
            history: mockHistory 
        });

    } catch (error) {
        console.error('Error fetching route history:', error);
        res.status(500).json({ error: 'Internal server error' });
    }
});

module.exports = router;
