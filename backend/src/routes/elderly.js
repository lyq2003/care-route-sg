// routes/users.js
const express = require('express');
const router = express.Router();
const { requireAuth } = require('../middleware/auth');
const HelpRequest = require('../services/helpRequest');
const multer = require('multer');
const path = require('path')
const ElderlyController = require('../controllers/elderlyController');




router.get('/profile', requireAuth, ElderlyController.getProfile);
router.put('/profile', requireAuth, ElderlyController.updateProfile);


/* const upload = multer({
    dest: './src/services/uploads',
    fileFilter: (req, file, cb) => {
        const allowedMimes = ['image/jpeg', 'image/png', 'application/pdf'];
        if (allowedMimes.includes(file.mimetype)) {
            cb(null, true); // Accept the file
        } else {
            cb(new Error('Error: Only JPEG, PNG, or PDF files are allowed!'), false); // Reject the file
        }
    }
}) */

var storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, './src/services/uploads')
    },
    filename: function (req, file, cb) {
        cb(null, Date.now() + path.extname(file.originalname)) //Appending extension
    }
})

const upload = multer({ storage: storage });



// POST /api/elderly/requestHelp - Create new help request
router.post('/requestHelp', upload.single('image'),/*  requireAuth, */ async (req, res) => {

    try {
        var userID = req.body.userID;

        if (req.file) {
            var uploadedFilename = req.file.filename; // Get the filename generated by diskStorage
        } else {
            var uploadedFilename = null;
        }


        // TODO: convert location to longitude and latitude



        const result = await HelpRequest.createRequest(userID, "100.1", "109.11", req.body.urgency, uploadedFilename);

        console.log(result);



        res.status(200).send("Okay");

    } catch (error) {
        console.log(error);

        console.error('Error creating help request:', error);
        res.status(500).json({ error: 'Internal server error' });

    }

});



module.exports = router;
